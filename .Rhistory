parameters$sep = "\t"                                 # field separator for count files or count matrix
parameters$annotation = "annotations.txt"       # file containing the functional annotations of each gene
parameters$geneID2GO_file = "b2g.txt"      # GO annotation files
parameters$contrast_file = "Contrasts.txt"            # matrix of different contrasts desired
parameters$sample_file = "Samples.txt"   # file describing the samples
#parameters$rm_sample = c("AC3R2","BC3R3")             # bad sample(s) !
# Options for data processing and their analyzes
#--------------------------------------------------------------------------
parameters$threshold_cpm = 0.5                        # CPM's threshold (default 0.5)
parameters$replicate_cpm = 3                          # Minimum number of replicates (default 3)
parameters$threshold_FDR = 0.05                       # FDR threshold (default 0.05)
parameters$threshold_logFC = 0                        # logFC threshold (default 1)
parameters$normal_method = "TMM"                      # normalization method (TMM/RLE/upperquartile/none) (default TMN)
parameters$p_adj_method = "BH"                        # p-value adjust method (holm/hochberg/hommel/bonferroni/BH/BY/fdr/none) (default fdr)
parameters$glm = "lrt"                                # GLM method (lrt/qlf) (default qlf)
parameters$logFC = TRUE                               # logFC in the summary table (default TRUE)
parameters$FC = TRUE                                  # FC in the summary table (default TRUE)
parameters$logCPM = FALSE                             # logCPm in the summary table (default FALSE)
parameters$FDR = TRUE                                 # FDR in the summary table (default TRUE)
parameters$LR = FALSE                                 # LR in the summary table (default FALSE)
parameters$Sign = TRUE                                # Significance (1/0/-1) in the summary table (default TRUE)
parameters$Expression = TRUE                          # Significance expression in the summary table (default TRUE)
parameters$mean_counts = FALSE                        # Mean counts in the summary table (default TRUE)
parameters$norm_counts = FALSE                        # Generate files with mormalized counts
# for legend of density plot
#-----------------------------------
parameters$densbotmar = 15                            # Set bottom margin of density plot to help position the legend (default 20)
parameters$densinset = 0.20                           # Set position the legend in bottom density graphe (default 0.45)
parameters$legendcol = 6                              # Set numbers of column for legends (default 6)
# Visualization of results from differential expression analyses
#-----------------------------------
parameters$plotMD = TRUE                              # Mean-Difference Plot of Expression Data (aka MA plot) (default FALSE)
parameters$plotVO = TRUE                              # Volcano plot for a specified coefficient/contrast of a linear model (default FALSE)
parameters$glimMD = TRUE                              # Glimma - Interactif Mean-Difference Plot of Expression Data (aka MA plot) (default FALSE)
parameters$glimVO = TRUE                              # Glimma - Interactif Volcano plot for a specified coefficient/contrast of a linear model (default FALSE)
########################################
##  Loading the data from the samples ##
########################################
##### load data #####
cat("\nRun DE analysis\n")
data<-loadData(parameters)
cat("\n\nChecking Data content:\n")
data$samples
data$contrast
data$design
head(data$dge$counts,n=4)
cat("Total number of genes : ", dim(data$dge$counts)[1], "\n")
cat("Total number of samples : ", dim(data$dge$counts)[2], "\n\n")
cat("summary of CPM by samples\n")
summary(edgeR::cpm(data$dge))
cat("\n")
##### asko files #####
asko_data<-asko3c(data, parameters)
# Removes all objects from the current workspace (R memory)
rm(list=ls())
# source AskoR.R file
#source("/home/ytirlet/Documents/ENDOVIRE/askoR-DevKevin/ScriptR/AskoR.R")
source("C:/DATA_KEVIN/INRA/AskoR/ScriptR/AskoR.R")
#source("C:/DATA_KEVIN/INRA/AskoR/ScriptR/AskoRavant14_03_2022.R")
# defined your workspace
#setwd("/home/ytirlet/Documents/ENDOVIRE/")
##############################################
##                Parameters                ##
##############################################
parameters<-Asko_start()
# Data and input files descriptions
#--------------------------------------------------------------------------
# WARNING: All the input files must be in the same folder
#          called "input" (case sensitive)!
#--------------------------------------------------------------------------
parameters$analysis_name = "Test_fabrice"             # output directory name (default DE_analysis, do not put space!)
parameters$fileofcount = "salmon.merged.gene_counts.tsv"           # matrix of count for all samples/conditions
parameters$sep = "\t"                                 # field separator for count files or count matrix
parameters$annotation = "annotations.txt"       # file containing the functional annotations of each gene
parameters$geneID2GO_file = "b2g.txt"      # GO annotation files
parameters$contrast_file = "Contrasts.txt"            # matrix of different contrasts desired
parameters$sample_file = "Samples.txt"   # file describing the samples
#parameters$rm_sample = c("AC3R2","BC3R3")             # bad sample(s) !
# Options for data processing and their analyzes
#--------------------------------------------------------------------------
parameters$threshold_cpm = 0.5                        # CPM's threshold (default 0.5)
parameters$replicate_cpm = 3                          # Minimum number of replicates (default 3)
parameters$threshold_FDR = 0.05                       # FDR threshold (default 0.05)
parameters$threshold_logFC = 0                        # logFC threshold (default 1)
parameters$normal_method = "TMM"                      # normalization method (TMM/RLE/upperquartile/none) (default TMN)
parameters$p_adj_method = "BH"                        # p-value adjust method (holm/hochberg/hommel/bonferroni/BH/BY/fdr/none) (default fdr)
parameters$glm = "lrt"                                # GLM method (lrt/qlf) (default qlf)
parameters$logFC = TRUE                               # logFC in the summary table (default TRUE)
parameters$FC = TRUE                                  # FC in the summary table (default TRUE)
parameters$logCPM = FALSE                             # logCPm in the summary table (default FALSE)
parameters$FDR = TRUE                                 # FDR in the summary table (default TRUE)
parameters$LR = FALSE                                 # LR in the summary table (default FALSE)
parameters$Sign = TRUE                                # Significance (1/0/-1) in the summary table (default TRUE)
parameters$Expression = TRUE                          # Significance expression in the summary table (default TRUE)
parameters$mean_counts = FALSE                        # Mean counts in the summary table (default TRUE)
parameters$norm_counts = FALSE                        # Generate files with mormalized counts
# for legend of density plot
#-----------------------------------
parameters$densbotmar = 15                            # Set bottom margin of density plot to help position the legend (default 20)
parameters$densinset = 0.20                           # Set position the legend in bottom density graphe (default 0.45)
parameters$legendcol = 6                              # Set numbers of column for legends (default 6)
# Visualization of results from differential expression analyses
#-----------------------------------
parameters$plotMD = TRUE                              # Mean-Difference Plot of Expression Data (aka MA plot) (default FALSE)
parameters$plotVO = TRUE                              # Volcano plot for a specified coefficient/contrast of a linear model (default FALSE)
parameters$glimMD = TRUE                              # Glimma - Interactif Mean-Difference Plot of Expression Data (aka MA plot) (default FALSE)
parameters$glimVO = TRUE                              # Glimma - Interactif Volcano plot for a specified coefficient/contrast of a linear model (default FALSE)
########################################
##  Loading the data from the samples ##
########################################
##### load data #####
cat("\nRun DE analysis\n")
data<-loadData(parameters)
cat("\n\nChecking Data content:\n")
data$samples
data$contrast
data$design
head(data$dge$counts,n=4)
cat("Total number of genes : ", dim(data$dge$counts)[1], "\n")
cat("Total number of samples : ", dim(data$dge$counts)[2], "\n\n")
cat("summary of CPM by samples\n")
summary(edgeR::cpm(data$dge))
cat("\n")
##### asko files #####
asko_data<-asko3c(data, parameters)
cat("\nChecking Asko Data : condition, contrast, context.\n")
asko_data$condition ; cat("\n")
asko_data$contrast  ; cat("\n")
asko_data$context   ; cat("\n")
##### filtering #####
cat("\nFiltering genes with more than ", parameters$threshold_cpm, " CPM in ",parameters$replicate_cpm,"samples\n")
asko_filt<-GEfilt(data, parameters)
cat("Total number of filtered genes : ", dim(asko_filt$counts)[1], "\n\n")
##### normalization #####
asko_norm<-GEnorm(asko_filt, asko_data, data, parameters)
# Removes all objects from the current workspace (R memory)
rm(list=ls())
# source AskoR.R file
#source("/home/ytirlet/Documents/ENDOVIRE/askoR-DevKevin/ScriptR/AskoR.R")
source("C:/DATA_KEVIN/INRA/AskoR/ScriptR/AskoR.R")
#source("C:/DATA_KEVIN/INRA/AskoR/ScriptR/AskoRavant14_03_2022.R")
# defined your workspace
#setwd("/home/ytirlet/Documents/ENDOVIRE/")
##############################################
##                Parameters                ##
##############################################
parameters<-Asko_start()
# Data and input files descriptions
#--------------------------------------------------------------------------
# WARNING: All the input files must be in the same folder
#          called "input" (case sensitive)!
#--------------------------------------------------------------------------
parameters$analysis_name = "Test_fabrice"             # output directory name (default DE_analysis, do not put space!)
parameters$fileofcount = "salmon.merged.gene_counts.tsv"           # matrix of count for all samples/conditions
parameters$sep = "\t"                                 # field separator for count files or count matrix
parameters$annotation = "annotations.txt"       # file containing the functional annotations of each gene
parameters$geneID2GO_file = "b2g.txt"      # GO annotation files
parameters$contrast_file = "Contrasts.txt"            # matrix of different contrasts desired
parameters$sample_file = "Samples.txt"   # file describing the samples
#parameters$rm_sample = c("AC3R2","BC3R3")             # bad sample(s) !
# Options for data processing and their analyzes
#--------------------------------------------------------------------------
parameters$threshold_cpm = 0.5                        # CPM's threshold (default 0.5)
parameters$replicate_cpm = 3                          # Minimum number of replicates (default 3)
parameters$threshold_FDR = 0.05                       # FDR threshold (default 0.05)
parameters$threshold_logFC = 0                        # logFC threshold (default 1)
parameters$normal_method = "TMM"                      # normalization method (TMM/RLE/upperquartile/none) (default TMN)
parameters$p_adj_method = "BH"                        # p-value adjust method (holm/hochberg/hommel/bonferroni/BH/BY/fdr/none) (default fdr)
parameters$glm = "lrt"                                # GLM method (lrt/qlf) (default qlf)
parameters$logFC = TRUE                               # logFC in the summary table (default TRUE)
parameters$FC = TRUE                                  # FC in the summary table (default TRUE)
parameters$logCPM = FALSE                             # logCPm in the summary table (default FALSE)
parameters$FDR = TRUE                                 # FDR in the summary table (default TRUE)
parameters$LR = FALSE                                 # LR in the summary table (default FALSE)
parameters$Sign = TRUE                                # Significance (1/0/-1) in the summary table (default TRUE)
parameters$Expression = TRUE                          # Significance expression in the summary table (default TRUE)
parameters$mean_counts = FALSE                        # Mean counts in the summary table (default TRUE)
parameters$norm_counts = FALSE                        # Generate files with mormalized counts
# for legend of density plot
#-----------------------------------
parameters$densbotmar = 15                            # Set bottom margin of density plot to help position the legend (default 20)
parameters$densinset = 0.20                           # Set position the legend in bottom density graphe (default 0.45)
parameters$legendcol = 6                              # Set numbers of column for legends (default 6)
# Visualization of results from differential expression analyses
#-----------------------------------
parameters$plotMD = TRUE                              # Mean-Difference Plot of Expression Data (aka MA plot) (default FALSE)
parameters$plotVO = TRUE                              # Volcano plot for a specified coefficient/contrast of a linear model (default FALSE)
parameters$glimMD = TRUE                              # Glimma - Interactif Mean-Difference Plot of Expression Data (aka MA plot) (default FALSE)
parameters$glimVO = TRUE                              # Glimma - Interactif Volcano plot for a specified coefficient/contrast of a linear model (default FALSE)
########################################
##  Loading the data from the samples ##
########################################
##### load data #####
cat("\nRun DE analysis\n")
data<-loadData(parameters)
cat("\n\nChecking Data content:\n")
data$samples
data$contrast
data$design
head(data$dge$counts,n=4)
cat("Total number of genes : ", dim(data$dge$counts)[1], "\n")
cat("Total number of samples : ", dim(data$dge$counts)[2], "\n\n")
cat("summary of CPM by samples\n")
summary(edgeR::cpm(data$dge))
cat("\n")
##### asko files #####
asko_data<-asko3c(data, parameters)
cat("\nChecking Asko Data : condition, contrast, context.\n")
asko_data$condition ; cat("\n")
asko_data$contrast  ; cat("\n")
asko_data$context   ; cat("\n")
##### filtering #####
cat("\nFiltering genes with more than ", parameters$threshold_cpm, " CPM in ",parameters$replicate_cpm,"samples\n")
asko_filt<-GEfilt(data, parameters)
cat("Total number of filtered genes : ", dim(asko_filt$counts)[1], "\n\n")
##### normalization #####
asko_norm<-GEnorm(asko_filt, asko_data, data, parameters)
# Removes all objects from the current workspace (R memory)
rm(list=ls())
# source AskoR.R file
#source("/home/ytirlet/Documents/ENDOVIRE/askoR-DevKevin/ScriptR/AskoR.R")
source("C:/DATA_KEVIN/INRA/AskoR/ScriptR/AskoR.R")
#source("C:/DATA_KEVIN/INRA/AskoR/ScriptR/AskoRavant14_03_2022.R")
# defined your workspace
#setwd("/home/ytirlet/Documents/ENDOVIRE/")
##############################################
##                Parameters                ##
##############################################
parameters<-Asko_start()
# Data and input files descriptions
#--------------------------------------------------------------------------
# WARNING: All the input files must be in the same folder
#          called "input" (case sensitive)!
#--------------------------------------------------------------------------
parameters$analysis_name = "Test_fabrice"             # output directory name (default DE_analysis, do not put space!)
parameters$fileofcount = "salmon.merged.gene_counts.tsv"           # matrix of count for all samples/conditions
parameters$sep = "\t"                                 # field separator for count files or count matrix
parameters$annotation = "annotations.txt"       # file containing the functional annotations of each gene
parameters$geneID2GO_file = "b2g.txt"      # GO annotation files
parameters$contrast_file = "Contrasts.txt"            # matrix of different contrasts desired
parameters$sample_file = "Samples.txt"   # file describing the samples
#parameters$rm_sample = c("AC3R2","BC3R3")             # bad sample(s) !
# Options for data processing and their analyzes
#--------------------------------------------------------------------------
parameters$threshold_cpm = 0.5                        # CPM's threshold (default 0.5)
parameters$replicate_cpm = 3                          # Minimum number of replicates (default 3)
parameters$threshold_FDR = 0.05                       # FDR threshold (default 0.05)
parameters$threshold_logFC = 0                        # logFC threshold (default 1)
parameters$normal_method = "TMM"                      # normalization method (TMM/RLE/upperquartile/none) (default TMN)
parameters$p_adj_method = "BH"                        # p-value adjust method (holm/hochberg/hommel/bonferroni/BH/BY/fdr/none) (default fdr)
parameters$glm = "lrt"                                # GLM method (lrt/qlf) (default qlf)
parameters$logFC = TRUE                               # logFC in the summary table (default TRUE)
parameters$FC = TRUE                                  # FC in the summary table (default TRUE)
parameters$logCPM = FALSE                             # logCPm in the summary table (default FALSE)
parameters$FDR = TRUE                                 # FDR in the summary table (default TRUE)
parameters$LR = FALSE                                 # LR in the summary table (default FALSE)
parameters$Sign = TRUE                                # Significance (1/0/-1) in the summary table (default TRUE)
parameters$Expression = TRUE                          # Significance expression in the summary table (default TRUE)
parameters$mean_counts = FALSE                        # Mean counts in the summary table (default TRUE)
parameters$norm_counts = FALSE                        # Generate files with mormalized counts
# for legend of density plot
#-----------------------------------
parameters$densbotmar = 15                            # Set bottom margin of density plot to help position the legend (default 20)
parameters$densinset = 0.20                           # Set position the legend in bottom density graphe (default 0.45)
parameters$legendcol = 6                              # Set numbers of column for legends (default 6)
# Visualization of results from differential expression analyses
#-----------------------------------
parameters$plotMD = TRUE                              # Mean-Difference Plot of Expression Data (aka MA plot) (default FALSE)
parameters$plotVO = TRUE                              # Volcano plot for a specified coefficient/contrast of a linear model (default FALSE)
parameters$glimMD = TRUE                              # Glimma - Interactif Mean-Difference Plot of Expression Data (aka MA plot) (default FALSE)
parameters$glimVO = TRUE                              # Glimma - Interactif Volcano plot for a specified coefficient/contrast of a linear model (default FALSE)
########################################
##  Loading the data from the samples ##
########################################
##### load data #####
cat("\nRun DE analysis\n")
data<-loadData(parameters)
cat("\n\nChecking Data content:\n")
data$samples
data$contrast
data$design
head(data$dge$counts,n=4)
cat("Total number of genes : ", dim(data$dge$counts)[1], "\n")
cat("Total number of samples : ", dim(data$dge$counts)[2], "\n\n")
cat("summary of CPM by samples\n")
summary(edgeR::cpm(data$dge))
cat("\n")
##### asko files #####
asko_data<-asko3c(data, parameters)
cat("\nChecking Asko Data : condition, contrast, context.\n")
asko_data$condition ; cat("\n")
asko_data$contrast  ; cat("\n")
asko_data$context   ; cat("\n")
##### filtering #####
cat("\nFiltering genes with more than ", parameters$threshold_cpm, " CPM in ",parameters$replicate_cpm,"samples\n")
asko_filt<-GEfilt(data, parameters)
cat("Total number of filtered genes : ", dim(asko_filt$counts)[1], "\n\n")
##### normalization #####
asko_norm<-GEnorm(asko_filt, asko_data, data, parameters)
## ----exec1, echo=FALSE, message=FALSE, warning=FALSE--------------------------
rm(list=ls())
source("C:/DATA_KEVIN/INRA/AskoR/ScriptR/AskoR.R")
## ----exec1, echo=FALSE, message=FALSE, warning=FALSE--------------------------
rm(list=ls())
source("C:/DATA_KEVIN/INRA/AskoR/ScriptR/AskoR.R")
## ----exec1, echo=FALSE, message=FALSE, warning=FALSE--------------------------
rm(list=ls())
source("C:/DATA_KEVIN/INRA/AskoR/ScriptR/AskoR.R")
## ----exec1, echo=FALSE, message=FALSE, warning=FALSE--------------------------
rm(list=ls())
source("C:/DATA_KEVIN/INRA/AskoR/ScriptR/AskoR.R")
parameters<-Asko_start()
parameters$analysis_name="KEGG_test"
parameters$fileofcount = "CountsMatrix.txt"
parameters$sample_file = "Samples_CountsMatrix.txt"
parameters$contrast_file = "Contrasts.txt"
parameters$annotation = "Genes_annotations.txt"
parameters$geneID2GO_file = "GO_annotations.txt"
parameters$geneID2KEGG_file = "KEGG_annotations.txt"
parameters$rm_sample = c("AC3R2","BC3R3")
data<-loadData(parameters)
usethis::use_package_doc()
usethis::use_package_doc()
?AskoR
??AskoR
devtools::load_all(".")
?AskoR
usethis::use_package_doc()
library(usethis)
usethis::use_package_doc()
?AskoR
??AskoR
devtools::load_all(".")
warnings()
?askoR
usethis::use_testthat()
library(conflicted)
install.packages(c("KernSmooth", "Matrix", "mgcv", "nlme", "spatial", "survival"))
sessionInfo()
install.packages(c("aplot", "bayestestR", "BiocManager", "BiodiversityR", "bookdown", "broom", "broom.helpers", "bslib", "cachem", "car", "checkmate", "class", "cli", "clock", "colorspace", "compositions", "correlation", "cpp11", "curl", "datawizard", "dbplyr", "deldir", "DEoptimR", "DescTools", "deSolve", "dials", "digest", "downlit", "DT", "ECOSolveR", "effectsize", "ellipse", "emmeans", "evaluate", "fansi", "fastmap", "fontawesome", "fs", "future", "future.apply", "gargle", "gert", "ggbeeswarm", "ggfun", "ggh4x", "ggnewscale", "ggplot2", "ggplotify", "ggrastr", "ggrepel", "ggstatsplot", "ggvenn", "ggVennDiagram", "gmp", "golem", "googledrive", "googlesheets4", "gprofiler2", "graphlayouts", "gt", "gtsummary", "hardhat", "haven", "Hmisc", "htmltools", "httpuv", "httr", "httr2", "igraph", "insight", "interp", "jsonlite", "KernSmooth", "knitr", "labdsv", "labelled", "later", "lattice", "lavaan", "lme4", "locfit", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mc2d", "mgcv", "mice", "modeldata", "multcomp", "multcompView", "mvtnorm", "nlme", "nnet", "openssl", "pak", "parallelly", "parameters", "parsnip", "patchwork", "pbapply", "performance", "pkgbuild", "pkgload", "plotly", "pls", "polspline", "pROC", "processx", "prodlim", "profvis", "progressr", "promises", "ps", "psych", "purrr", "qgraph", "qqconf", "quantreg", "rbibutils", "Rcpp", "RcppAnnoy", "RcppArmadillo", "readxl", "recipes", "remotes", "renv", "reticulate", "Rfast", "rgl", "rlang", "rmarkdown", "Rmpfr", "rms", "robustbase", "rsconnect", "RSQLite", "rstudioapi", "RVAideMemoire", "s2", "sass", "scatterpie", "scatterplot3d", "scs", "seriation", "sf", "shiny", "sp", "spatial", "statsExpressions", "stringi", "survey", "survival", "sys", "testthat", "TH.data", "tidymodels", "tidytree", "tinytex", "TSP", "tune", "twosamples", "tzdb", "units", "usethis", "utf8", "uuid", "uwot", "V8", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "webshot", "wk", "workflowsets", "xfun", "xml2", "yaml", "yardstick", "yulab.utils", "zip", "zoo"))
install.packages(c("aplot", "bayestestR", "BiocManager", "BiodiversityR", "bookdown", "broom", "broom.helpers", "bslib", "cachem", "car", "checkmate", "class", "cli", "clock", "colorspace", "compositions", "correlation", "cpp11", "curl", "datawizard", "dbplyr", "deldir", "DEoptimR", "DescTools", "deSolve", "dials", "digest", "downlit", "DT", "ECOSolveR", "effectsize", "ellipse", "emmeans", "evaluate", "fansi", "fastmap", "fontawesome", "fs", "future", "future.apply", "gargle", "gert", "ggbeeswarm", "ggfun", "ggh4x", "ggnewscale", "ggplot2", "ggplotify", "ggrastr", "ggrepel", "ggstatsplot", "ggvenn", "ggVennDiagram", "gmp", "golem", "googledrive", "googlesheets4", "gprofiler2", "graphlayouts", "gt", "gtsummary", "hardhat", "haven", "Hmisc", "htmltools", "httpuv", "httr", "httr2", "igraph", "insight", "interp", "jsonlite", "KernSmooth", "knitr", "labdsv", "labelled", "later", "lattice", "lavaan", "lme4", "locfit", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mc2d", "mgcv", "mice", "modeldata", "multcomp", "multcompView", "mvtnorm", "nlme", "nnet", "openssl", "pak", "parallelly", "parameters", "parsnip", "patchwork", "pbapply", "performance", "pkgbuild", "pkgload", "plotly", "pls", "polspline", "pROC", "processx", "prodlim", "profvis", "progressr", "promises", "ps", "psych", "purrr", "qgraph", "qqconf", "quantreg", "rbibutils", "Rcpp", "RcppAnnoy", "RcppArmadillo", "readxl", "recipes", "remotes", "renv", "reticulate", "Rfast", "rgl", "rlang", "rmarkdown", "Rmpfr", "rms", "robustbase", "rsconnect", "RSQLite", "rstudioapi", "RVAideMemoire", "s2", "sass", "scatterpie", "scatterplot3d", "scs", "seriation", "sf", "shiny", "sp", "spatial", "statsExpressions", "stringi", "survey", "survival", "sys", "testthat", "TH.data", "tidymodels", "tidytree", "tinytex", "TSP", "tune", "twosamples", "tzdb", "units", "usethis", "utf8", "uuid", "uwot", "V8", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "webshot", "wk", "workflowsets", "xfun", "xml2", "yaml", "yardstick", "yulab.utils", "zip", "zoo"))
install.packages(c("aplot", "bayestestR", "BiocManager", "BiodiversityR", "bookdown", "broom", "broom.helpers", "bslib", "cachem", "car", "checkmate", "class", "cli", "clock", "colorspace", "compositions", "correlation", "cpp11", "curl", "datawizard", "dbplyr", "deldir", "DEoptimR", "DescTools", "deSolve", "dials", "digest", "downlit", "DT", "ECOSolveR", "effectsize", "ellipse", "emmeans", "evaluate", "fansi", "fastmap", "fontawesome", "fs", "future", "future.apply", "gargle", "gert", "ggbeeswarm", "ggfun", "ggh4x", "ggnewscale", "ggplot2", "ggplotify", "ggrastr", "ggrepel", "ggstatsplot", "ggvenn", "ggVennDiagram", "gmp", "golem", "googledrive", "googlesheets4", "gprofiler2", "graphlayouts", "gt", "gtsummary", "hardhat", "haven", "Hmisc", "htmltools", "httpuv", "httr", "httr2", "igraph", "insight", "interp", "jsonlite", "KernSmooth", "knitr", "labdsv", "labelled", "later", "lattice", "lavaan", "lme4", "locfit", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mc2d", "mgcv", "mice", "modeldata", "multcomp", "multcompView", "mvtnorm", "nlme", "nnet", "openssl", "pak", "parallelly", "parameters", "parsnip", "patchwork", "pbapply", "performance", "pkgbuild", "pkgload", "plotly", "pls", "polspline", "pROC", "processx", "prodlim", "profvis", "progressr", "promises", "ps", "psych", "purrr", "qgraph", "qqconf", "quantreg", "rbibutils", "Rcpp", "RcppAnnoy", "RcppArmadillo", "readxl", "recipes", "remotes", "renv", "reticulate", "Rfast", "rgl", "rlang", "rmarkdown", "Rmpfr", "rms", "robustbase", "rsconnect", "RSQLite", "rstudioapi", "RVAideMemoire", "s2", "sass", "scatterpie", "scatterplot3d", "scs", "seriation", "sf", "shiny", "sp", "spatial", "statsExpressions", "stringi", "survey", "survival", "sys", "testthat", "TH.data", "tidymodels", "tidytree", "tinytex", "TSP", "tune", "twosamples", "tzdb", "units", "usethis", "utf8", "uuid", "uwot", "V8", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "webshot", "wk", "workflowsets", "xfun", "xml2", "yaml", "yardstick", "yulab.utils", "zip", "zoo"))
install.packages(c("aplot", "bayestestR", "BiocManager", "BiodiversityR", "bookdown", "broom", "broom.helpers", "bslib", "cachem", "car", "checkmate", "class", "cli", "clock", "colorspace", "compositions", "correlation", "cpp11", "curl", "datawizard", "dbplyr", "deldir", "DEoptimR", "DescTools", "deSolve", "dials", "digest", "downlit", "DT", "ECOSolveR", "effectsize", "ellipse", "emmeans", "evaluate", "fansi", "fastmap", "fontawesome", "fs", "future", "future.apply", "gargle", "gert", "ggbeeswarm", "ggfun", "ggh4x", "ggnewscale", "ggplot2", "ggplotify", "ggrastr", "ggrepel", "ggstatsplot", "ggvenn", "ggVennDiagram", "gmp", "golem", "googledrive", "googlesheets4", "gprofiler2", "graphlayouts", "gt", "gtsummary", "hardhat", "haven", "Hmisc", "htmltools", "httpuv", "httr", "httr2", "igraph", "insight", "interp", "jsonlite", "KernSmooth", "knitr", "labdsv", "labelled", "later", "lattice", "lavaan", "lme4", "locfit", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mc2d", "mgcv", "mice", "modeldata", "multcomp", "multcompView", "mvtnorm", "nlme", "nnet", "openssl", "pak", "parallelly", "parameters", "parsnip", "patchwork", "pbapply", "performance", "pkgbuild", "pkgload", "plotly", "pls", "polspline", "pROC", "processx", "prodlim", "profvis", "progressr", "promises", "ps", "psych", "purrr", "qgraph", "qqconf", "quantreg", "rbibutils", "Rcpp", "RcppAnnoy", "RcppArmadillo", "readxl", "recipes", "remotes", "renv", "reticulate", "Rfast", "rgl", "rlang", "rmarkdown", "Rmpfr", "rms", "robustbase", "rsconnect", "RSQLite", "rstudioapi", "RVAideMemoire", "s2", "sass", "scatterpie", "scatterplot3d", "scs", "seriation", "sf", "shiny", "sp", "spatial", "statsExpressions", "stringi", "survey", "survival", "sys", "testthat", "TH.data", "tidymodels", "tidytree", "tinytex", "TSP", "tune", "twosamples", "tzdb", "units", "usethis", "utf8", "uuid", "uwot", "V8", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "webshot", "wk", "workflowsets", "xfun", "xml2", "yaml", "yardstick", "yulab.utils", "zip", "zoo"))
install.packages(c("aplot", "bayestestR", "BiocManager", "BiodiversityR", "bookdown", "broom", "broom.helpers", "bslib", "cachem", "car", "checkmate", "class", "cli", "clock", "colorspace", "compositions", "correlation", "cpp11", "curl", "datawizard", "dbplyr", "deldir", "DEoptimR", "DescTools", "deSolve", "dials", "digest", "downlit", "DT", "ECOSolveR", "effectsize", "ellipse", "emmeans", "evaluate", "fansi", "fastmap", "fontawesome", "fs", "future", "future.apply", "gargle", "gert", "ggbeeswarm", "ggfun", "ggh4x", "ggnewscale", "ggplot2", "ggplotify", "ggrastr", "ggrepel", "ggstatsplot", "ggvenn", "ggVennDiagram", "gmp", "golem", "googledrive", "googlesheets4", "gprofiler2", "graphlayouts", "gt", "gtsummary", "hardhat", "haven", "Hmisc", "htmltools", "httpuv", "httr", "httr2", "igraph", "insight", "interp", "jsonlite", "KernSmooth", "knitr", "labdsv", "labelled", "later", "lattice", "lavaan", "lme4", "locfit", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mc2d", "mgcv", "mice", "modeldata", "multcomp", "multcompView", "mvtnorm", "nlme", "nnet", "openssl", "pak", "parallelly", "parameters", "parsnip", "patchwork", "pbapply", "performance", "pkgbuild", "pkgload", "plotly", "pls", "polspline", "pROC", "processx", "prodlim", "profvis", "progressr", "promises", "ps", "psych", "purrr", "qgraph", "qqconf", "quantreg", "rbibutils", "Rcpp", "RcppAnnoy", "RcppArmadillo", "readxl", "recipes", "remotes", "renv", "reticulate", "Rfast", "rgl", "rlang", "rmarkdown", "Rmpfr", "rms", "robustbase", "rsconnect", "RSQLite", "rstudioapi", "RVAideMemoire", "s2", "sass", "scatterpie", "scatterplot3d", "scs", "seriation", "sf", "shiny", "sp", "spatial", "statsExpressions", "stringi", "survey", "survival", "sys", "testthat", "TH.data", "tidymodels", "tidytree", "tinytex", "TSP", "tune", "twosamples", "tzdb", "units", "usethis", "utf8", "uuid", "uwot", "V8", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "webshot", "wk", "workflowsets", "xfun", "xml2", "yaml", "yardstick", "yulab.utils", "zip", "zoo"))
install.packages(c("aplot", "bayestestR", "BiocManager", "BiodiversityR", "bookdown", "broom", "broom.helpers", "bslib", "cachem", "car", "checkmate", "class", "cli", "clock", "colorspace", "compositions", "correlation", "cpp11", "curl", "datawizard", "dbplyr", "deldir", "DEoptimR", "DescTools", "deSolve", "dials", "digest", "downlit", "DT", "ECOSolveR", "effectsize", "ellipse", "emmeans", "evaluate", "fansi", "fastmap", "fontawesome", "fs", "future", "future.apply", "gargle", "gert", "ggbeeswarm", "ggfun", "ggh4x", "ggnewscale", "ggplot2", "ggplotify", "ggrastr", "ggrepel", "ggstatsplot", "ggvenn", "ggVennDiagram", "gmp", "golem", "googledrive", "googlesheets4", "gprofiler2", "graphlayouts", "gt", "gtsummary", "hardhat", "haven", "Hmisc", "htmltools", "httpuv", "httr", "httr2", "igraph", "insight", "interp", "jsonlite", "KernSmooth", "knitr", "labdsv", "labelled", "later", "lattice", "lavaan", "lme4", "locfit", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mc2d", "mgcv", "mice", "modeldata", "multcomp", "multcompView", "mvtnorm", "nlme", "nnet", "openssl", "pak", "parallelly", "parameters", "parsnip", "patchwork", "pbapply", "performance", "pkgbuild", "pkgload", "plotly", "pls", "polspline", "pROC", "processx", "prodlim", "profvis", "progressr", "promises", "ps", "psych", "purrr", "qgraph", "qqconf", "quantreg", "rbibutils", "Rcpp", "RcppAnnoy", "RcppArmadillo", "readxl", "recipes", "remotes", "renv", "reticulate", "Rfast", "rgl", "rlang", "rmarkdown", "Rmpfr", "rms", "robustbase", "rsconnect", "RSQLite", "rstudioapi", "RVAideMemoire", "s2", "sass", "scatterpie", "scatterplot3d", "scs", "seriation", "sf", "shiny", "sp", "spatial", "statsExpressions", "stringi", "survey", "survival", "sys", "testthat", "TH.data", "tidymodels", "tidytree", "tinytex", "TSP", "tune", "twosamples", "tzdb", "units", "usethis", "utf8", "uuid", "uwot", "V8", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "webshot", "wk", "workflowsets", "xfun", "xml2", "yaml", "yardstick", "yulab.utils", "zip", "zoo"))
install.packages(c("aplot", "bayestestR", "BiocManager", "BiodiversityR", "bookdown", "broom", "broom.helpers", "bslib", "cachem", "car", "checkmate", "class", "cli", "clock", "colorspace", "compositions", "correlation", "cpp11", "curl", "datawizard", "dbplyr", "deldir", "DEoptimR", "DescTools", "deSolve", "dials", "digest", "downlit", "DT", "ECOSolveR", "effectsize", "ellipse", "emmeans", "evaluate", "fansi", "fastmap", "fontawesome", "fs", "future", "future.apply", "gargle", "gert", "ggbeeswarm", "ggfun", "ggh4x", "ggnewscale", "ggplot2", "ggplotify", "ggrastr", "ggrepel", "ggstatsplot", "ggvenn", "ggVennDiagram", "gmp", "golem", "googledrive", "googlesheets4", "gprofiler2", "graphlayouts", "gt", "gtsummary", "hardhat", "haven", "Hmisc", "htmltools", "httpuv", "httr", "httr2", "igraph", "insight", "interp", "jsonlite", "KernSmooth", "knitr", "labdsv", "labelled", "later", "lattice", "lavaan", "lme4", "locfit", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mc2d", "mgcv", "mice", "modeldata", "multcomp", "multcompView", "mvtnorm", "nlme", "nnet", "openssl", "pak", "parallelly", "parameters", "parsnip", "patchwork", "pbapply", "performance", "pkgbuild", "pkgload", "plotly", "pls", "polspline", "pROC", "processx", "prodlim", "profvis", "progressr", "promises", "ps", "psych", "purrr", "qgraph", "qqconf", "quantreg", "rbibutils", "Rcpp", "RcppAnnoy", "RcppArmadillo", "readxl", "recipes", "remotes", "renv", "reticulate", "Rfast", "rgl", "rlang", "rmarkdown", "Rmpfr", "rms", "robustbase", "rsconnect", "RSQLite", "rstudioapi", "RVAideMemoire", "s2", "sass", "scatterpie", "scatterplot3d", "scs", "seriation", "sf", "shiny", "sp", "spatial", "statsExpressions", "stringi", "survey", "survival", "sys", "testthat", "TH.data", "tidymodels", "tidytree", "tinytex", "TSP", "tune", "twosamples", "tzdb", "units", "usethis", "utf8", "uuid", "uwot", "V8", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "webshot", "wk", "workflowsets", "xfun", "xml2", "yaml", "yardstick", "yulab.utils", "zip", "zoo"))
install.packages(c("aplot", "bayestestR", "BiocManager", "BiodiversityR", "bookdown", "broom", "broom.helpers", "bslib", "cachem", "car", "checkmate", "class", "cli", "clock", "colorspace", "compositions", "correlation", "cpp11", "curl", "datawizard", "dbplyr", "deldir", "DEoptimR", "DescTools", "deSolve", "dials", "digest", "downlit", "DT", "ECOSolveR", "effectsize", "ellipse", "emmeans", "evaluate", "fansi", "fastmap", "fontawesome", "fs", "future", "future.apply", "gargle", "gert", "ggbeeswarm", "ggfun", "ggh4x", "ggnewscale", "ggplot2", "ggplotify", "ggrastr", "ggrepel", "ggstatsplot", "ggvenn", "ggVennDiagram", "gmp", "golem", "googledrive", "googlesheets4", "gprofiler2", "graphlayouts", "gt", "gtsummary", "hardhat", "haven", "Hmisc", "htmltools", "httpuv", "httr", "httr2", "igraph", "insight", "interp", "jsonlite", "KernSmooth", "knitr", "labdsv", "labelled", "later", "lattice", "lavaan", "lme4", "locfit", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mc2d", "mgcv", "mice", "modeldata", "multcomp", "multcompView", "mvtnorm", "nlme", "nnet", "openssl", "pak", "parallelly", "parameters", "parsnip", "patchwork", "pbapply", "performance", "pkgbuild", "pkgload", "plotly", "pls", "polspline", "pROC", "processx", "prodlim", "profvis", "progressr", "promises", "ps", "psych", "purrr", "qgraph", "qqconf", "quantreg", "rbibutils", "Rcpp", "RcppAnnoy", "RcppArmadillo", "readxl", "recipes", "remotes", "renv", "reticulate", "Rfast", "rgl", "rlang", "rmarkdown", "Rmpfr", "rms", "robustbase", "rsconnect", "RSQLite", "rstudioapi", "RVAideMemoire", "s2", "sass", "scatterpie", "scatterplot3d", "scs", "seriation", "sf", "shiny", "sp", "spatial", "statsExpressions", "stringi", "survey", "survival", "sys", "testthat", "TH.data", "tidymodels", "tidytree", "tinytex", "TSP", "tune", "twosamples", "tzdb", "units", "usethis", "utf8", "uuid", "uwot", "V8", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "webshot", "wk", "workflowsets", "xfun", "xml2", "yaml", "yardstick", "yulab.utils", "zip", "zoo"))
install.packages(c("aplot", "bayestestR", "BiocManager", "BiodiversityR", "bookdown", "broom", "broom.helpers", "bslib", "cachem", "car", "checkmate", "class", "cli", "clock", "colorspace", "compositions", "correlation", "cpp11", "curl", "datawizard", "dbplyr", "deldir", "DEoptimR", "DescTools", "deSolve", "dials", "digest", "downlit", "DT", "ECOSolveR", "effectsize", "ellipse", "emmeans", "evaluate", "fansi", "fastmap", "fontawesome", "fs", "future", "future.apply", "gargle", "gert", "ggbeeswarm", "ggfun", "ggh4x", "ggnewscale", "ggplot2", "ggplotify", "ggrastr", "ggrepel", "ggstatsplot", "ggvenn", "ggVennDiagram", "gmp", "golem", "googledrive", "googlesheets4", "gprofiler2", "graphlayouts", "gt", "gtsummary", "hardhat", "haven", "Hmisc", "htmltools", "httpuv", "httr", "httr2", "igraph", "insight", "interp", "jsonlite", "KernSmooth", "knitr", "labdsv", "labelled", "later", "lattice", "lavaan", "lme4", "locfit", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mc2d", "mgcv", "mice", "modeldata", "multcomp", "multcompView", "mvtnorm", "nlme", "nnet", "openssl", "pak", "parallelly", "parameters", "parsnip", "patchwork", "pbapply", "performance", "pkgbuild", "pkgload", "plotly", "pls", "polspline", "pROC", "processx", "prodlim", "profvis", "progressr", "promises", "ps", "psych", "purrr", "qgraph", "qqconf", "quantreg", "rbibutils", "Rcpp", "RcppAnnoy", "RcppArmadillo", "readxl", "recipes", "remotes", "renv", "reticulate", "Rfast", "rgl", "rlang", "rmarkdown", "Rmpfr", "rms", "robustbase", "rsconnect", "RSQLite", "rstudioapi", "RVAideMemoire", "s2", "sass", "scatterpie", "scatterplot3d", "scs", "seriation", "sf", "shiny", "sp", "spatial", "statsExpressions", "stringi", "survey", "survival", "sys", "testthat", "TH.data", "tidymodels", "tidytree", "tinytex", "TSP", "tune", "twosamples", "tzdb", "units", "usethis", "utf8", "uuid", "uwot", "V8", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "webshot", "wk", "workflowsets", "xfun", "xml2", "yaml", "yardstick", "yulab.utils", "zip", "zoo"))
install.packages("installr")
library(installr)
updateR()
## ----exec1, echo=FALSE, message=FALSE, warning=FALSE--------------------------
rm(list=ls())
source("C:/DATA_KEVIN/INRA/AskoR/ScriptR/AskoR.R")
parameters<-Asko_start()
parameters$analysis_name="NveauAsko_LogFC1_QLF"
parameters$fileofcount = "CountsMatrix.txt"
parameters$sample_file = "Samples_CountsMatrix.txt"
parameters$contrast_file = "Contrasts.txt"
parameters$annotation = "Genes_annotations.txt"
parameters$geneID2GO_file = "GO_annotations.txt"
parameters$geneID2KEGG_file = "KEGG_annotations.txt"
parameters$rm_sample = c("AC3R2","BC3R3")
data<-loadData(parameters)
rm(list=ls())
source("C:/DATA_KEVIN/INRA/AskoR/ScriptR/AskoR.R")
parameters<-Asko_start()
parameters$analysis_name="test"
parameters$fileofcount = "CountsMatrix.txt"
parameters$sample_file = "Samples_CountsMatrix.txt"
parameters$contrast_file = "Contrasts.txt"
parameters$annotation = "Genes_annotations.txt"
parameters$geneID2GO_file = "GO_annotations.txt"
parameters$geneID2KEGG_file = "KEGG_annotations.txt"
parameters$rm_sample = c("AC3R2","BC3R3")
data<-loadData(parameters)
setwd("C:/DATA_KEVIN/INRA/Tests_AskoR/Test_JeuDemo_Aout2024")
rm(list=ls())
source("C:/DATA_KEVIN/INRA/AskoR/ScriptR/AskoR.R")
parameters<-Asko_start()
parameters$analysis_name="test"
parameters$fileofcount = "CountsMatrix.txt"
parameters$sample_file = "Samples_CountsMatrix.txt"
parameters$contrast_file = "Contrasts.txt"
parameters$annotation = "Genes_annotations.txt"
parameters$geneID2GO_file = "GO_annotations.txt"
parameters$geneID2KEGG_file = "KEGG_annotations.txt"
parameters$rm_sample = c("AC3R2","BC3R3")
data<-loadData(parameters)
## ----run_askor4b--------------------------------------------------------------
# Displays all samples recorded
data$samples
# Displays all contrast recorded
data$contrast
# Displays design experiment
data$design
# Displays the first 5 lines and 8 columns of counts table.
data$dge$counts[1:5,1:8]
# Total number of genes:
dim(data$dge$counts)[1]
# Total number of samples:
dim(data$dge$counts)[2]
## ----run_askor5---------------------------------------------------------------
asko_data<-asko3c_bis(data, parameters)
## ----run_askor5---------------------------------------------------------------
asko_data<-asko3c(data, parameters)
## ----run_askor6a--------------------------------------------------------------
# CPM's threshold
parameters$threshold_cpm = 0.5
# minimum of sample which are upper to cpm threshold
parameters$replicate_cpm = 3 # we have 3 replicates
## ----run_askor6b--------------------------------------------------------------
# run filtering
asko_filt<-GEfilt(data, parameters)
# Total number of filtered genes:
dim(asko_filt$counts)[1]
## ----param1-------------------------------------------------------------------
# Set position the legend in bottom density graphe
parameters$densinset = 0.20
# Set numbers of column for legends
parameters$legendcol = 8
# run filtering
asko_filt<-GEfilt(data, parameters)
## ----run_askor7---------------------------------------------------------------
# run normalization
asko_norm<-GEnorm(asko_filt, asko_data, data, parameters)
## ----run_askor8---------------------------------------------------------------
GEcorr(asko_norm,parameters)
## ----run_askor9a--------------------------------------------------------------
# FDR threshold
parameters$threshold_FDR = 0.05
# logFC threshold
parameters$threshold_logFC = 0
# normalization method
parameters$normal_method = "TMM"
# p-value adjust method
parameters$p_adj_method = "BH"
# GLM method
parameters$glm = "qlf"
## ----run_askor9c--------------------------------------------------------------
# run differential expression analysis
resDEG<-DEanalysis(asko_norm, data, asko_data, parameters)
##### Venn diagram #####
# My list
parameters$compaVD = c("AC1vsAC2-AC1vsAC3-AC2vsAC3",
"BC1vsBC2-BC1vsBC3-BC2vsBC3",
"AC1vsBC1-AC2vsBC2-AC3vsBC3")
# graph type "all"
parameters$VD = "all"
VD(resDEG, parameters, asko_data)
# graph type "up"
parameters$VD = "up"
VD(resDEG, parameters, asko_data)
# graph type "down"
parameters$VD = "down"
VD(resDEG, parameters, asko_data)
# graph type "both"
parameters$compaVD = c("AC1vsBC1-AC2vsBC2",
"AC1vsBC1-AC3vsBC3",
"AC2vsBC2-AC3vsBC3")
parameters$VD = "both"
VD(resDEG, parameters, asko_data)
###### UpsetR Graphs #####
# My list
parameters$upset_list = c("AC1vsAC2-AC1vsAC3-AC2vsAC3",
"BC1vsBC2-BC1vsBC3-BC2vsBC3",
"AC1vsBC1-AC2vsBC2-AC3vsBC3")
# graphs type "all"
parameters$upset_basic = "all"
parameters$upset_type = "all"
UpSetGraph(resDEG, data, parameters)
# graphs type "mixed"
parameters$upset_basic = "mixed"
parameters$upset_type = "mixed"
UpSetGraph(resDEG, data, parameters)
# graphs type "up"
parameters$upset_basic = "up"
parameters$upset_type = "up"
UpSetGraph(resDEG, data, parameters)
# graphs type "down"
parameters$upset_basic = "down"
parameters$upset_type = "down"
UpSetGraph(resDEG, data, parameters)
parameters$GO = "both" # pour r?aliser l'enrichissement sur tous les g?nes DE du contraste sans notion de sens de r?gulation (possibilit? de mettre "up" ou "down" ? la place)
parameters$GO_threshold = 0.05 # seuil de significativit? du test d'enrichissement
parameters$GO_min_num_genes = 10 # nombre minimal de g?nes qui sont derri?re le GO dans le g?nome
parameters$GO_algo = "weight01" # algorithme par d?faut utilis? par topGO pour l'enrichissement
parameters$GO_stats = "fisher" # test statistique pour d?finir la significativit? d'un GO enrichi
## Param?tres pour la repr?sentation graphique
parameters$Ratio_threshold = 2 # seuil de ratio d'enrichissement (combien de fois le GO est enrichi dans le contraste par rapport au g?nome) au del? duquel le GO est repr?sent?
parameters$GO_max_top_terms = 10 # nombre maximal de GO ? repr?senter dans chaque cat?gorie (BP, MF, CC)
parameters$GO_min_sig_genes = 2 # no
GOenrichment(resDEG, data, parameters)
############################################
####### run KEGG enrichment analysis #######
############################################
parameters$geneID2KEGG_file = "KEGG_annotations.txt" # fichier d'annotations KEGG (dans le dossier input)
parameters$KEGG_max_top_terms = 10    # nombre maximal de KEGG represente dans le graphe (defaut : 15)
parameters$KEGG_Ratio_threshold = 1.5 # seuil de ratio d'enrichissement minimal pour etre represente dans le graphe (defaut : 1)
parameters$KEGG_min_num_genes = 1     # nombre minimal de genes derriere le KEGG dans le genome pour qu'il soit represente dans le graphe (defaut : 1)
parameters$KEGG_min_sig_genes = 1     # nombre minimal de genes derriere un KEGG significatif pour qu'il soit represente dans le graphe (defaut : 1)
# On contrasts
KEGGenrichment(resDEG, data, parameters)
# On specific list of genes
list = rownames(resDEG[2000:3000,])
KEGGenrichment(resDEG, data, parameters, list, "TEST")
#library(igraph)
network<-GenesNetwork(parameters)
library(igraph)
network<-GenesNetwork(parameters)
list = rownames(resDEG[3000:3030,])
network<-GenesNetwork(parameters, list, "TestNetwork")
